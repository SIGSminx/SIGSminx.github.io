<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucky_minx</title>
  
  <subtitle>Welcome!</subtitle>
  <link href="http://lucky_minx.com/atom.xml" rel="self"/>
  
  <link href="http://lucky_minx.com/"/>
  <updated>2024-03-13T13:51:13.557Z</updated>
  <id>http://lucky_minx.com/</id>
  
  <author>
    <name>minx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实验设计期中复习</title>
    <link href="http://lucky_minx.com/2024/03/13/%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%9C%9F%E4%B8%AD%E5%A4%8D%E4%B9%A0/"/>
    <id>http://lucky_minx.com/2024/03/13/%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%9C%9F%E4%B8%AD%E5%A4%8D%E4%B9%A0/</id>
    <published>2024-03-13T03:19:04.000Z</published>
    <updated>2024-03-13T13:51:13.557Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参数估计"><a href="#参数估计" class="headerlink" title="参数估计"></a>参数估计</h2><h3 id="期望和方差"><a href="#期望和方差" class="headerlink" title="期望和方差"></a>期望和方差</h3><p>期望计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131121994.png" alt="image.png"><br>方差计算公式 <img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131122666.png" alt="image.png"></p><h3 id="点估计"><a href="#点估计" class="headerlink" title="点估计"></a>点估计</h3><p>初衷：由于无法用无穷的点来算（积分），因此采用有限的点来进行估计</p><p>使用最大似然法，构造极大似然函数<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131125575.png" alt="image.png"><br>通过解方程，使得解满足极大似然函数值达到最大，有<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131125798.png" alt="image.png"><br>该结果是极大似然函数的点估计</p><ul><li>无偏性，点估计的期望与n无关，因此对点估计的方差进行校正<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131126021.png" alt="image.png"></li><li>有效性：方差小的估计量有效</li></ul><h3 id="区间估计"><a href="#区间估计" class="headerlink" title="区间估计"></a>区间估计</h3><p>$\hat{X}$作为μ的估计值，同时具有无偏性、有效性和充分性， 但是随机变量 不可能恰好落在μ上，点估计有不足之处。 但是可以用一个区间去包含μ</p><ul><li>已知多个点对均值的区间估计<br>公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131130682.png" alt="image.png"><br>t根据$\alpha,f$查表，$\sigma$标准差，平均平方和开根号，$n$样本量<br>例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131130264.png" alt="image.png"></li></ul><h3 id="样本容量确定（均值估计样本量）"><a href="#样本容量确定（均值估计样本量）" class="headerlink" title="样本容量确定（均值估计样本量）"></a>样本容量确定（均值估计样本量）</h3><p>解决的问题：多少样本才是对分析最佳的？ </p><ul><li>样本量过大，虽然可以提高统计推断精度，但是成 本随之增加； </li><li>样本量过小，会使统计推断误差过大；</li></ul><p>公式推导：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131137449.png" alt="image.png"><br>例题 <img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131137449.png" alt="image.png"><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131146944.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131152736.png" alt="image.png"><br>表：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131152996.png" alt="image.png"></p><p>例题解析：</p><ul><li><p>例题1<br>根据公式，均值方差给定，d&#x3D;均值x允许误差（10%），$\alpha&#x3D;0.95,\alpha&#x2F;2&#x3D;0.975$<br>这个实际原理是：<br>当我们谈论95%的置信区间时，我们通常是在讨论中心的95%，这将留下2.5%在每侧的尾部。因此，为了找到与上侧2.5%相对应的Z分数，我们需要找到表中累积到0.9750（因为 0.5 + 0.475 &#x3D; 0.975）的值，这意味着中心到Z分数点的面积占总面积的97.5%。<br>找点：<br>找表格中累计达到0.975的点，找到横坐标1.9，纵坐标.06，因此z为1.96</p></li><li><p>例题2<br>同理，得出$\alpha&#x3D;0.99,\alpha&#x2F;2&#x3D;0.995$，读表找出对应的横坐标2.5，纵坐标.08，因此z为2.58</p></li></ul><h3 id="样本总量确定（总体比例估计样本量）"><a href="#样本总量确定（总体比例估计样本量）" class="headerlink" title="样本总量确定（总体比例估计样本量）"></a>样本总量确定（总体比例估计样本量）</h3><p>已知次品率，求总体n，<strong>未知次品率的情况下，p&#x3D;0.5保证结果可靠性</strong>（图例题二）<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131407857.png" alt="image.png"><br>例题1<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131409465.png" alt="image.png"><br>解析 ：</p><ul><li>代入次品率p，d为误差控制，置信度查表0.025表示表格中到达0.975的值</li></ul><p>例题2<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131409864.png" alt="image.png"><br>解析：</p><ul><li>为保证结果可靠性，取p&#x3D;0.5，同理计算即可</li></ul><h2 id="统计检验"><a href="#统计检验" class="headerlink" title="统计检验"></a>统计检验</h2><p>原理 </p><ul><li>此矛盾是从实际推断和原理的矛盾，即“小概率事件在 一次实验中几乎不可能发生” </li><li>若在一次实验中发生了小概率事件，则拒绝原假设，否 则接受假设</li></ul><p>步骤：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131430923.png" alt="image.png"></p><h3 id="数据分布检验"><a href="#数据分布检验" class="headerlink" title="数据分布检验"></a>数据分布检验</h3><h4 id="偏度峰度检验"><a href="#偏度峰度检验" class="headerlink" title="偏度峰度检验"></a>偏度峰度检验</h4><p>若总体为正态分布，随机抽取样本研究， 偏度g1和峰度g2都服从正态分布<br>计算公式 ：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131432279.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131435105.png" alt="image.png"><br>例题：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131433500.png" alt="image.png"><br>注意$\alpha&#x2F;4$，多个检验统计量的时候就要多除一个<br>例题解析 ：<br>按照计算公式，先计算出$g_1$和$g_2$，然后代入$u_i&#x3D;u(g_i,n)$进行计算，通过比较检验临界值得出结论</p><h4 id="K-S分布检验"><a href="#K-S分布检验" class="headerlink" title="K-S分布检验"></a>K-S分布检验</h4><p>用于检验检验一组样本数据 的实际分布是否与某一指定的理论分布相符合。简单来说就是能否用正态分布函数来拟合这组样本量，通过构造假设统计量检查最大的误差，来进行假设验证<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131439185.png" alt="image.png"><br>例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131440634.png" alt="image.png"><br>例题解析 ：</p><ul><li>计算样本均值和方差 <pre class="line-numbers language-python" data-language="python"><code class="language-python">u <span class="token operator">=</span> <span class="token number">4.8525</span><span class="token comment"># 计算方差</span>s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">4.8525</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span><span class="token number">20</span> <span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">4.5</span><span class="token operator">-</span><span class="token number">4.8525</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span><span class="token number">372</span> <span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">-</span><span class="token number">4.8525</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">498</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">5.5</span><span class="token operator">-</span><span class="token number">4.8525</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">103</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">-</span><span class="token number">4.8525</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">999</span><span class="token operator">**</span> <span class="token number">0.5</span><span class="token number">0.3521274627176926</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>作为正态分布u和s的假设，<ul><li>H0：样本服从均值&#x3D;4.85，标准差&#x3D;0.352的正态分布 •</li><li>H1：样本不服从均值&#x3D;4.85，标准差&#x3D;0.352的正态分布<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131445294.png" alt="image.png"><br>每一列解析（第二行为例）代入4.25和4.75，得出在对应的标准化正态分布中的实际分布区间；查表得该区间的概率（$X_{-0.28}-X_{-1.70}$，注由于对称性，表中只有正值，相应变换一下即可，另外表中给的也是累计概率分布$F(x)$），得出累计概率（与前面的累加），实际的累计工人以及累计频率，相减</li></ul></li></ul><p>得出最大概率-频率区间（这个就是$D_n$）<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131451136.png" alt="image.png"><br>最后计算实际的临界值（根据n和$\alpha$查表即可），然后看看接受还是拒绝解设</p><h4 id="卡方拟合优度检验-（可能考）"><a href="#卡方拟合优度检验-（可能考）" class="headerlink" title="卡方拟合优度检验 （可能考）"></a>卡方拟合优度检验 （可能考）</h4><p>检验抽取样本的总体分布与某种 特定分布的符合程度<br>具体步骤<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131453079.png" alt="image.png"><br>卡方计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131458838.png" alt="image.png"><br>例题：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131459194.png" alt="image.png"><br>解析：</p><ul><li>区间划分<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131459737.png" alt="image.png"></li><li>计算相应的理论分布<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131500144.png" alt="image.png"><br>先计算均值和标准差。然后与上一节[[#K-S分布检验]]相同，计算正态分布下的对应理论频率分布，以第一行为例，可以算得(129.5-143.8)&#x2F;6&#x3D;-2.3833333，查表得<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131501079.png" alt="image.png"><br>因此为0.0087。后面代入公式计算得到卡方和即可。检验 量计算方式为：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131503176.png" alt="image.png"><br>其中0.1为置信水平，k&#x3D;划分的区间数，r为参数估计数量（正态分布为2），查表</li></ul><p>例题2<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131505993.png" alt="image.png"><br>用上面的方法也能做[[#假设检验]]，但是理论上这种方法好一点。<br>本质上就是划分为良品和不合格品两个区间，然后相应的计算就行。</p><h4 id="列联表"><a href="#列联表" class="headerlink" title="列联表"></a>列联表</h4><p>表示形式为<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131512459.png" alt="image.png"></p><p>记住计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131513084.png" alt="image.png"></p><p>边界值为X((r-1)(c-1))</p><p>例题 ：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131514701.png" alt="image.png"><br>直接代入公式计算就行：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131514371.png" alt="image.png"></p><h3 id="离群值检验"><a href="#离群值检验" class="headerlink" title="离群值检验"></a>离群值检验</h3><p>相关应用——异常数据的取舍</p><p>四种方法 </p><h4 id="拉依达准则（3σ准则）"><a href="#拉依达准则（3σ准则）" class="headerlink" title="拉依达准则（3σ准则）"></a>拉依达准则（3σ准则）</h4><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131531622.png" alt="image.png"><br>简单算一下就行了</p><h4 id="肖维特-Chauvent-准则"><a href="#肖维特-Chauvent-准则" class="headerlink" title="肖维特(Chauvent)准则"></a>肖维特(Chauvent)准则</h4><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131531446.png" alt="image.png"></p><h4 id="格拉布斯-Grubbs-准则——兼顾了置信概率-可能考"><a href="#格拉布斯-Grubbs-准则——兼顾了置信概率-可能考" class="headerlink" title="格拉布斯(Grubbs)准则——兼顾了置信概率(可能考)"></a>格拉布斯(Grubbs)准则——兼顾了置信概率(可能考)</h4><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131532204.png" alt="image.png"><br>比上面那个多了个置信概率<br>例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131537819.png" alt="image.png"><br>主要是方差计算公式，这个是样本方差要n-1<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131537236.png" alt="image.png"><br>其他的都是按步骤来就行<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131538332.png" alt="image.png"><br>剔除之后再算一遍 </p><h4 id="狄克逊准则——通过极差比判定剔除异常数据"><a href="#狄克逊准则——通过极差比判定剔除异常数据" class="headerlink" title="狄克逊准则——通过极差比判定剔除异常数据"></a>狄克逊准则——通过极差比判定剔除异常数据</h4><p>异常数据应该是最大数据和最小数据，因此 其基本方法是将数据按大小排队，检验最大数据和最小 数据是否异常数据</p><h3 id="方差比较检验"><a href="#方差比较检验" class="headerlink" title="方差比较检验"></a>方差比较检验</h3><p>需要区别单方差检验与多方差检验<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131542858.png" alt="image.png"><br>其中S为样本<strong>标准差</strong>，$\sigma$为总体<strong>标准差</strong></p><p>单方差检验例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131544449.png" alt="image.png"><br>代入数据就行 ，注意卡方是n-1</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131545639.png" alt="image.png"><br>注意是F(m-1,n-1)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span><span class="token number">0.07</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">0.01</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">0.08</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">0.03</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">0.05</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">=</span><span class="token number">0.0037</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>计算F以及临界值比较</p><h4 id="均值检验"><a href="#均值检验" class="headerlink" title="均值检验"></a>均值检验</h4><p>分</p><h4 id="μ检验-方差已知"><a href="#μ检验-方差已知" class="headerlink" title="μ检验(方差已知)"></a>μ检验(方差已知)</h4><p>计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131555616.png" alt="image.png"><br>例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131555463.png" alt="image.png"></p><p>其中μ就是正态分布的分布表的值</p><h4 id="t检验-方差未知"><a href="#t检验-方差未知" class="headerlink" title="t检验(方差未知)"></a>t检验(方差未知)</h4><p>单分布计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131610589.png" alt="image.png"><br>s是样本标准差</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131610033.png" alt="image.png"></p><p>双分布计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131634553.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131611271.png" alt="image.png"></p><p>例题<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131631422.png" alt="image.png"><br>解析：配对的情况</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131633606.png" alt="image.png"><br>非配对情况 </p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131636715.png" alt="image.png"></p><h2 id="方差分析"><a href="#方差分析" class="headerlink" title="方差分析"></a>方差分析</h2><h3 id="方差分析概述"><a href="#方差分析概述" class="headerlink" title="方差分析概述"></a>方差分析概述</h3><h3 id="单因素方差分析"><a href="#单因素方差分析" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h3><p>计算公式<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131646343.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131646253.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131645735.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131646616.png" alt="image.png"></p><p>例题：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131647243.png" alt="image.png"><br>计算：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131647625.png" alt="image.png"><br>解析：根据公式来就行，SSE组内的方差的和，SSA组间（和总体的均值）的和</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131650210.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131653483.png" alt="image.png"></p><p>例题2<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131656352.png" alt="image.png"><br>计算SSA和SSE<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131656628.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131658704.png" alt="image.png"></p><h4 id="无重复双因素方差分析"><a href="#无重复双因素方差分析" class="headerlink" title="无重复双因素方差分析"></a>无重复双因素方差分析</h4><p>其实一样的，就是每列如果也是有参数影响的话，每列再算一个MSB</p><p>例题：</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131714885.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131715444.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131717318.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131719939.png" alt="image.png"></p><p>例题 2<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131719158.png" alt="image.png"></p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131719878.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131719090.png" alt="image.png"></p><h4 id="有重复双因素方差分析"><a href="#有重复双因素方差分析" class="headerlink" title="有重复双因素方差分析"></a>有重复双因素方差分析</h4><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131724262.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131725414.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131725690.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202403131725546.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参数估计&quot;&gt;&lt;a href=&quot;#参数估计&quot; class=&quot;headerlink&quot; title=&quot;参数估计&quot;&gt;&lt;/a&gt;参数估计&lt;/h2&gt;&lt;h3 id=&quot;期望和方差&quot;&gt;&lt;a href=&quot;#期望和方差&quot; class=&quot;headerlink&quot; title=&quot;期望和方差&quot;&gt;</summary>
      
    
    
    
    <category term="学习" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学术" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E6%9C%AF/"/>
    
    
    <category term="学习" scheme="http://lucky_minx.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="复习" scheme="http://lucky_minx.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
    <category term="数据" scheme="http://lucky_minx.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数学" scheme="http://lucky_minx.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>mmseg v1.0</title>
    <link href="http://lucky_minx.com/2023/11/13/%E5%AD%A6%E4%B9%A0/%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/mmseg%20v1.0/"/>
    <id>http://lucky_minx.com/2023/11/13/%E5%AD%A6%E4%B9%A0/%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/mmseg%20v1.0/</id>
    <published>2023-11-13T06:38:11.000Z</published>
    <updated>2023-11-13T06:40:14.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>主要是记录如何使用mmseg这个分割库，使用自己的数据集进行训练，使用自己的config参数以及最后的测试以及推理。</p><p>在这里主要记录的是使用Unet网络的应用，数据采用胃部肠化数据，共有两个标签，一个是正常组织的标签（蓝色），一个是肠化组织标签（红色）。</p><p>我们的任务就是训练一个网络来识别正常腺体和异常腺体的区域。</p><h3 id="mmseg介绍"><a href="#mmseg介绍" class="headerlink" title="mmseg介绍"></a>mmseg介绍</h3><p>就是一个分割工具箱没什么好介绍的，具体内容看链接：</p><ul><li><a href="https://mmsegmentation.readthedocs.io/zh-cn/latest/index.html">欢迎来到 MMSegmentation 的文档! — MMSegmentation 1.2.1 文档</a></li><li><a href="https://github.com/open-mmlab/mmsegmentation">open-mmlab&#x2F;mmsegmentation: OpenMMLab Semantic Segmentation Toolbox and Benchmark. (github.com)</a></li></ul><p>内容具体介绍</p><ol><li>环境配置 </li><li>数据集制作</li><li>自定义数据集</li><li>数据集的读取</li><li>模型选取以及参数调整</li><li>训练测试<br>主要参考来源：<a href="https://blog.csdn.net/weixin_42748439/article/details/122845505">mmsegmentation教程1:自定义数据集、config文件修改、训练教程_AESA相控阵的博客-CSDN博客</a></li></ol><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>跟着官方的来就行<a href="https://mmsegmentation.readthedocs.io/zh-cn/latest/get_started.html">开始：安装和运行 MMSeg — MMSegmentation 1.2.1 文档</a></p><p>可能会遇到问题，遇到问题装一个这个 </p><pre class="line-numbers language-none"><code class="language-none">pip install mmcv-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="数据集制作"><a href="#数据集制作" class="headerlink" title="数据集制作"></a>数据集制作</h3><p>首先自己的数据要按照如下的格式摆放：</p><pre class="line-numbers language-none"><code class="language-none">├── data│   ├── my_dataset│   │   ├── img_dir│   │   │   ├── train│   │   │   │   ├── xxx&#123;img_suffix&#125;│   │   │   │   ├── yyy&#123;img_suffix&#125;│   │   │   │   ├── zzz&#123;img_suffix&#125;│   │   │   ├── val│   │   ├── ann_dir│   │   │   ├── train│   │   │   │   ├── xxx&#123;seg_map_suffix&#125;│   │   │   │   ├── yyy&#123;seg_map_suffix&#125;│   │   │   │   ├── zzz&#123;seg_map_suffix&#125;│   │   │   ├── val<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>几个主要的要点：</p><ol><li>这个data文件夹最好放在mmseg的子路径下，加快读取速度</li><li>img_dir放置所有图片，ann_dir放置所有mask（标注文件），提前分好测试集和训练集（分训练集和测试集代码如下），注意文件名要对应（img中在测试集的xxx文件，它的标注文件一定也在测试集中）<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> random<span class="token keyword">import</span> shutilrandom<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>input_img_dir <span class="token operator">=</span> <span class="token string">''</span>input_label_dir <span class="token operator">=</span> <span class="token string">''</span>output_img_dir <span class="token operator">=</span> <span class="token string">''</span>output_label_dir <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> split <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'train'</span><span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_img_dir<span class="token punctuation">,</span> split<span class="token punctuation">)</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_label_dir<span class="token punctuation">,</span> split<span class="token punctuation">)</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>img_files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_img_dir<span class="token punctuation">)</span>label_files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_label_dir<span class="token punctuation">)</span>train_ratio <span class="token operator">=</span> <span class="token number">0.7</span>val_ratio <span class="token operator">=</span> <span class="token number">0.3</span> random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>img_files<span class="token punctuation">)</span>total_samples <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>img_files<span class="token punctuation">)</span>num_train <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>total_samples <span class="token operator">*</span> train_ratio<span class="token punctuation">)</span>train_img_files <span class="token operator">=</span> img_files<span class="token punctuation">[</span><span class="token punctuation">:</span>num_train<span class="token punctuation">]</span>val_img_files <span class="token operator">=</span> img_files<span class="token punctuation">[</span>num_train<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">for</span> src_dir<span class="token punctuation">,</span> split <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> <span class="token string">'train'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> img_file <span class="token keyword">in</span> <span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>split<span class="token punctuation">&#125;</span></span><span class="token string">_img_files'</span></span><span class="token punctuation">]</span><span class="token punctuation">:</span>        label_file <span class="token operator">=</span> img_file  <span class="token comment"># 图像和标签文件名一一对应</span>        src_img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> img_file<span class="token punctuation">)</span>        src_label_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_label_dir<span class="token punctuation">,</span> label_file<span class="token punctuation">)</span>        dst_img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_img_dir<span class="token punctuation">,</span> split<span class="token punctuation">,</span> img_file<span class="token punctuation">)</span>        dst_label_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_label_dir<span class="token punctuation">,</span> split<span class="token punctuation">,</span> label_file<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src_img_path<span class="token punctuation">,</span> dst_img_path<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src_label_path<span class="token punctuation">,</span> dst_label_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="自定义数据集"><a href="#自定义数据集" class="headerlink" title="自定义数据集"></a>自定义数据集</h3><p>由于我们的任务比较特殊，常规的分割方法所采用的数据集，因此需要自己重新定义。</p><p>在<code>mmseg/datasets/</code>目录下找到<code>stare.py</code>文件<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131218801.png" alt="image.png"></p><p>同路径下复制一份，重命名为<code>my_dataset.py</code>记住这个名字后续还要用。</p><p>下面需要修改三个地方：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131329075.png" alt="image.png"></p><p>你需要修改标红的三个地方：<br>STAREDataset：数据集的名称，自定义，自己要记得<br>CLASSES：表示你数据集的背景+类别<br>PALETTE：表示你数据集各类别的像素值<br>img_suffix：原图图像后缀<br>seg_map_suffix：mask图像后缀<br>reduce_zero_label：<strong>这个后面说</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Copyright (c) OpenMMLab. All rights reserved.</span><span class="token keyword">import</span> mmengine<span class="token punctuation">.</span>fileio <span class="token keyword">as</span> fileio<span class="token keyword">from</span> mmseg<span class="token punctuation">.</span>registry <span class="token keyword">import</span> DATASETS<span class="token keyword">from</span> <span class="token punctuation">.</span>basesegdataset <span class="token keyword">import</span> BaseSegDataset<span class="token decorator annotation punctuation">@DATASETS<span class="token punctuation">.</span>register_module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Mydataset</span><span class="token punctuation">(</span>BaseSegDataset<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""STARE dataset.    In segmentation map annotation for STARE, 0 stands for background, which is    included in 2 categories. ``reduce_zero_label`` is fixed to False. The    ``img_suffix`` is fixed to '.png' and ``seg_map_suffix`` is fixed to    '.ah.png'.    """</span>    METAINFO <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>        classes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        palette<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>                 img_suffix<span class="token operator">=</span><span class="token string">'.png'</span><span class="token punctuation">,</span>                 seg_map_suffix<span class="token operator">=</span><span class="token string">'.png'</span><span class="token punctuation">,</span>                 reduce_zero_label<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>            img_suffix<span class="token operator">=</span>img_suffix<span class="token punctuation">,</span>            seg_map_suffix<span class="token operator">=</span>seg_map_suffix<span class="token punctuation">,</span>            reduce_zero_label<span class="token operator">=</span>reduce_zero_label<span class="token punctuation">,</span>            <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">assert</span> fileio<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>            self<span class="token punctuation">.</span>data_prefix<span class="token punctuation">[</span><span class="token string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> backend_args<span class="token operator">=</span>self<span class="token punctuation">.</span>backend_args<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后修改后的样子</p><p>然后修改这个__init__文件<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131357469.png" alt="image.png"></p><p>前面添加一个from .my_dataset import Mydataset<br>后面添加一个, ‘Mydataset’<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131358536.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131358184.png" alt="image.png"><br>就是你刚刚命名的文件名和dataset的命名</p><p>注意：palette是调色板，对应与后续测试的时候每类别的输出颜色，另外，mask也有要求，由于现在的标签是蓝色和红色，即[255, 0, 0]和[0, 0, 255]。但是后续的处理需要变为0：背景，1：标签1,2：标签2。因此标签需要进一步处理。</p><p>代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imageinput_folder <span class="token operator">=</span> <span class="token string">''</span>output_folder <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> filename <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_folder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> filename<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">)</span>        img_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img<span class="token punctuation">)</span>        img_array<span class="token punctuation">[</span>np<span class="token punctuation">.</span>where<span class="token punctuation">(</span><span class="token punctuation">(</span>img_array <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>        img_array<span class="token punctuation">[</span>np<span class="token punctuation">.</span>where<span class="token punctuation">(</span><span class="token punctuation">(</span>img_array <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>        mask <span class="token operator">=</span> img_array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        new_img <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>        new_img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据集的读取"><a href="#数据集的读取" class="headerlink" title="数据集的读取"></a>数据集的读取</h3><p>在configs&#x2F;_ <em>base</em>_ &#x2F;datasets&#x2F;目录下找到stare.py文件，复制一份重命名为my_dataset.py。进行修改<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131414681.png" alt="image.png"></p><p>修改后的代码以及所需要修改的部分都已经添加注释了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># dataset settings</span>dataset_type <span class="token operator">=</span> <span class="token string">'MyDataset'</span> <span class="token comment"># 改成自己的数据集类名</span>data_root <span class="token operator">=</span> <span class="token string">'/data_sda/data/gastric_2label'</span> <span class="token comment"># 数据集存储路径</span>img_scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment"># 图像尺寸</span>crop_size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment"># 裁剪尺寸</span>train_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale<span class="token operator">=</span>img_scale<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">#这个改一下</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomCrop'</span><span class="token punctuation">,</span> crop_size<span class="token operator">=</span>crop_size<span class="token punctuation">,</span> cat_max_ratio<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PhotoMetricDistortion'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>test_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale<span class="token operator">=</span>img_scale<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment"># add loading annotation after ``Resize`` because ground truth</span>    <span class="token comment"># does not need to do resize data transform</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>img_ratios <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.25</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">]</span>tta_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">,</span> backend_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'TestTimeAug'</span><span class="token punctuation">,</span>        transforms<span class="token operator">=</span><span class="token punctuation">[</span>            <span class="token punctuation">[</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale_factor<span class="token operator">=</span>r<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> r <span class="token keyword">in</span> img_ratios            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">'horizontal'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">1.</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">'horizontal'</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>train_dataloader <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>    batch_size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token comment"># 这个可以自己测试</span>    num_workers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># </span>    persistent_workers<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    sampler<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'InfiniteSampler'</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RepeatDataset'</span><span class="token punctuation">,</span>        times<span class="token operator">=</span><span class="token number">40000</span><span class="token punctuation">,</span>        dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>            <span class="token builtin">type</span><span class="token operator">=</span>dataset_type<span class="token punctuation">,</span>            data_root<span class="token operator">=</span>data_root<span class="token punctuation">,</span>            data_prefix<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>                img_path<span class="token operator">=</span><span class="token string">'img_split/train'</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>                seg_map_path<span class="token operator">=</span><span class="token string">'label_split/train'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>            pipeline<span class="token operator">=</span>train_pipeline<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>val_dataloader <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>    batch_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    num_workers<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    persistent_workers<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    sampler<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'DefaultSampler'</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span>dataset_type<span class="token punctuation">,</span>        data_root<span class="token operator">=</span>data_root<span class="token punctuation">,</span>        data_prefix<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>            img_path<span class="token operator">=</span><span class="token string">'img_split/val'</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>            seg_map_path<span class="token operator">=</span><span class="token string">'label_split/val'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>        pipeline<span class="token operator">=</span>test_pipeline<span class="token punctuation">)</span><span class="token punctuation">)</span>test_dataloader <span class="token operator">=</span> val_dataloaderval_evaluator <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'IoUMetric'</span><span class="token punctuation">,</span> iou_metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'mDice'</span><span class="token punctuation">,</span> <span class="token string">'mIoU'</span><span class="token punctuation">,</span> <span class="token string">'mFscore'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 改一下评价指标</span>test_evaluator <span class="token operator">=</span> val_evaluator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="模型选取以及参数调整"><a href="#模型选取以及参数调整" class="headerlink" title="模型选取以及参数调整"></a>模型选取以及参数调整</h3><p>这里简单写一个用Unet的（其他的其实类似）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;主要是记录如何使用mmseg这个分割库，使用自己的数据集进行训练，使用自己的config参数以及最后的测试以及推理。&lt;/p&gt;
&lt;p&gt;在这里主</summary>
      
    
    
    
    <category term="学习" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="人工智能" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="学习" scheme="http://lucky_minx.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="人工智能" scheme="http://lucky_minx.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>mmseg教程</title>
    <link href="http://lucky_minx.com/2023/11/13/%E5%AD%A6%E4%B9%A0/mmseg%E6%95%99%E7%A8%8B/"/>
    <id>http://lucky_minx.com/2023/11/13/%E5%AD%A6%E4%B9%A0/mmseg%E6%95%99%E7%A8%8B/</id>
    <published>2023-11-13T03:19:50.000Z</published>
    <updated>2024-03-13T02:05:15.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>主要是记录如何使用mmseg这个分割库，使用自己的数据集进行训练，使用自己的config参数以及最后的测试以及推理。</p><p>在这里主要记录的是使用Unet网络的应用，数据采用胃部肠化数据，共有两个标签，一个是正常组织的标签（蓝色），一个是肠化组织标签（红色）。</p><p>我们的任务就是训练一个网络来识别正常腺体和异常腺体的区域。</p><h3 id="mmseg介绍"><a href="#mmseg介绍" class="headerlink" title="mmseg介绍"></a>mmseg介绍</h3><p>就是一个分割工具箱没什么好介绍的，具体内容看链接：</p><ul><li><a href="https://mmsegmentation.readthedocs.io/zh-cn/latest/index.html">欢迎来到 MMSegmentation 的文档! — MMSegmentation 1.2.1 文档</a></li><li><a href="https://github.com/open-mmlab/mmsegmentation">open-mmlab&#x2F;mmsegmentation: OpenMMLab Semantic Segmentation Toolbox and Benchmark. (github.com)</a></li></ul><p>内容具体介绍</p><ol><li>环境配置 </li><li>数据集制作</li><li>自定义数据集</li><li>数据集的读取</li><li>模型选取以及参数调整</li><li>训练测试<br>主要参考来源：<a href="https://blog.csdn.net/weixin_42748439/article/details/122845505">mmsegmentation教程1:自定义数据集、config文件修改、训练教程_AESA相控阵的博客-CSDN博客</a></li></ol><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>跟着官方的来就行<a href="https://mmsegmentation.readthedocs.io/zh-cn/latest/get_started.html">开始：安装和运行 MMSeg — MMSegmentation 1.2.1 文档</a></p><p>可能会遇到问题，遇到问题装一个这个 </p><pre class="line-numbers language-none"><code class="language-none">pip install mmcv-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="数据集制作"><a href="#数据集制作" class="headerlink" title="数据集制作"></a>数据集制作</h3><p>首先自己的数据要按照如下的格式摆放：</p><pre class="line-numbers language-none"><code class="language-none">├── data│   ├── my_dataset│   │   ├── img_dir│   │   │   ├── train│   │   │   │   ├── xxx&#123;img_suffix&#125;│   │   │   │   ├── yyy&#123;img_suffix&#125;│   │   │   │   ├── zzz&#123;img_suffix&#125;│   │   │   ├── val│   │   ├── ann_dir│   │   │   ├── train│   │   │   │   ├── xxx&#123;seg_map_suffix&#125;│   │   │   │   ├── yyy&#123;seg_map_suffix&#125;│   │   │   │   ├── zzz&#123;seg_map_suffix&#125;│   │   │   ├── val<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>几个主要的要点：</p><ol><li>这个data文件夹最好放在mmseg的子路径下，加快读取速度</li><li>img_dir放置所有图片，ann_dir放置所有mask（标注文件），提前分好测试集和训练集（分训练集和测试集代码如下），注意文件名要对应（img中在测试集的xxx文件，它的标注文件一定也在测试集中）<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> random<span class="token keyword">import</span> shutilrandom<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>input_img_dir <span class="token operator">=</span> <span class="token string">''</span>input_label_dir <span class="token operator">=</span> <span class="token string">''</span>output_img_dir <span class="token operator">=</span> <span class="token string">''</span>output_label_dir <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> split <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'train'</span><span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_img_dir<span class="token punctuation">,</span> split<span class="token punctuation">)</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_label_dir<span class="token punctuation">,</span> split<span class="token punctuation">)</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>img_files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_img_dir<span class="token punctuation">)</span>label_files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_label_dir<span class="token punctuation">)</span>train_ratio <span class="token operator">=</span> <span class="token number">0.7</span>val_ratio <span class="token operator">=</span> <span class="token number">0.3</span> random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>img_files<span class="token punctuation">)</span>total_samples <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>img_files<span class="token punctuation">)</span>num_train <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>total_samples <span class="token operator">*</span> train_ratio<span class="token punctuation">)</span>train_img_files <span class="token operator">=</span> img_files<span class="token punctuation">[</span><span class="token punctuation">:</span>num_train<span class="token punctuation">]</span>val_img_files <span class="token operator">=</span> img_files<span class="token punctuation">[</span>num_train<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">for</span> src_dir<span class="token punctuation">,</span> split <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> <span class="token string">'train'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> img_file <span class="token keyword">in</span> <span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>split<span class="token punctuation">&#125;</span></span><span class="token string">_img_files'</span></span><span class="token punctuation">]</span><span class="token punctuation">:</span>        label_file <span class="token operator">=</span> img_file  <span class="token comment"># 图像和标签文件名一一对应</span>        src_img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_img_dir<span class="token punctuation">,</span> img_file<span class="token punctuation">)</span>        src_label_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_label_dir<span class="token punctuation">,</span> label_file<span class="token punctuation">)</span>        dst_img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_img_dir<span class="token punctuation">,</span> split<span class="token punctuation">,</span> img_file<span class="token punctuation">)</span>        dst_label_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_label_dir<span class="token punctuation">,</span> split<span class="token punctuation">,</span> label_file<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src_img_path<span class="token punctuation">,</span> dst_img_path<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src_label_path<span class="token punctuation">,</span> dst_label_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="自定义数据集"><a href="#自定义数据集" class="headerlink" title="自定义数据集"></a>自定义数据集</h3><p><img src="/" alt="image.png"></p><p>由于我们的任务比较特殊，常规的分割方法所采用的数据集，因此需要自己重新定义。</p><p>在<code>mmseg/datasets/</code>目录下找到<code>stare.py</code>文件<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131218801.png" alt="image.png"></p><p>同路径下复制一份，重命名为<code>my_dataset.py</code>记住这个名字后续还要用。</p><p>下面需要修改三个地方：<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131329075.png" alt="image.png"></p><p>你需要修改标红的三个地方：<br>STAREDataset：数据集的名称，自定义，自己要记得<br>CLASSES：表示你数据集的背景+类别<br>PALETTE：表示你数据集各类别的像素值<br>img_suffix：原图图像后缀<br>seg_map_suffix：mask图像后缀<br>reduce_zero_label：<strong>这个后面说</strong>，算了现在说吧。这个就是是否去除背景，我们做的是实例分割不是语义分割，是可以去除背景的，这里把背景去掉，实际上准确率会高很多。<a href="https://zhuanlan.zhihu.com/p/552134716">写给 MMSegmentation 工具箱新手的避坑指南 - 知乎 (zhihu.com)</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Copyright (c) OpenMMLab. All rights reserved.</span><span class="token keyword">import</span> mmengine<span class="token punctuation">.</span>fileio <span class="token keyword">as</span> fileio<span class="token keyword">from</span> mmseg<span class="token punctuation">.</span>registry <span class="token keyword">import</span> DATASETS<span class="token keyword">from</span> <span class="token punctuation">.</span>basesegdataset <span class="token keyword">import</span> BaseSegDataset<span class="token decorator annotation punctuation">@DATASETS<span class="token punctuation">.</span>register_module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Mydataset</span><span class="token punctuation">(</span>BaseSegDataset<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""STARE dataset.    In segmentation map annotation for STARE, 0 stands for background, which is    included in 2 categories. ``reduce_zero_label`` is fixed to False. The    ``img_suffix`` is fixed to '.png' and ``seg_map_suffix`` is fixed to    '.ah.png'.    """</span>    METAINFO <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>        classes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        palette<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>                 img_suffix<span class="token operator">=</span><span class="token string">'.png'</span><span class="token punctuation">,</span>                 seg_map_suffix<span class="token operator">=</span><span class="token string">'.png'</span><span class="token punctuation">,</span>                 reduce_zero_label<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>            img_suffix<span class="token operator">=</span>img_suffix<span class="token punctuation">,</span>            seg_map_suffix<span class="token operator">=</span>seg_map_suffix<span class="token punctuation">,</span>            reduce_zero_label<span class="token operator">=</span>reduce_zero_label<span class="token punctuation">,</span>            <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">assert</span> fileio<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>            self<span class="token punctuation">.</span>data_prefix<span class="token punctuation">[</span><span class="token string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> backend_args<span class="token operator">=</span>self<span class="token punctuation">.</span>backend_args<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后修改后的样子</p><p>然后修改这个__init__文件<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131357469.png" alt="image.png"></p><p>前面添加一个from .my_dataset import Mydataset<br>后面添加一个, ‘Mydataset’<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131358536.png" alt="image.png"><br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131358184.png" alt="image.png"><br>就是你刚刚命名的文件名和dataset的命名</p><p>注意：palette是调色板，对应与后续测试的时候每类别的输出颜色，另外，mask也有要求，由于现在的标签是蓝色和红色，即[255, 0, 0]和[0, 0, 255]。但是后续的处理需要变为0：背景，1：标签1,2：标签2。因此标签需要进一步处理。</p><p>代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imageinput_folder <span class="token operator">=</span> <span class="token string">''</span>output_folder <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> filename <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_folder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> filename<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">)</span>        img_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img<span class="token punctuation">)</span>        img_array<span class="token punctuation">[</span>np<span class="token punctuation">.</span>where<span class="token punctuation">(</span><span class="token punctuation">(</span>img_array <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>        img_array<span class="token punctuation">[</span>np<span class="token punctuation">.</span>where<span class="token punctuation">(</span><span class="token punctuation">(</span>img_array <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>        mask <span class="token operator">=</span> img_array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        new_img <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>        new_img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据集的读取"><a href="#数据集的读取" class="headerlink" title="数据集的读取"></a>数据集的读取</h3><p>在configs&#x2F;_ <em>base</em>_ &#x2F;datasets&#x2F;目录下找到stare.py文件，复制一份重命名为my_dataset.py。进行修改<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202311131414681.png" alt="image.png"></p><p>修改后的代码以及所需要修改的部分都已经添加注释了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># dataset settings</span>dataset_type <span class="token operator">=</span> <span class="token string">'MyDataset'</span> <span class="token comment"># 改成自己的数据集类名</span>data_root <span class="token operator">=</span> <span class="token string">'/data_sda/data/gastric_2label'</span> <span class="token comment"># 数据集存储路径</span>img_scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment"># 图像尺寸</span>crop_size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment"># 裁剪尺寸</span>train_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale<span class="token operator">=</span>img_scale<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">#这个改一下</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomCrop'</span><span class="token punctuation">,</span> crop_size<span class="token operator">=</span>crop_size<span class="token punctuation">,</span> cat_max_ratio<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PhotoMetricDistortion'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>test_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale<span class="token operator">=</span>img_scale<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment"># add loading annotation after ``Resize`` because ground truth</span>    <span class="token comment"># does not need to do resize data transform</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>img_ratios <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.25</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">]</span>tta_pipeline <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadImageFromFile'</span><span class="token punctuation">,</span> backend_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'TestTimeAug'</span><span class="token punctuation">,</span>        transforms<span class="token operator">=</span><span class="token punctuation">[</span>            <span class="token punctuation">[</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'Resize'</span><span class="token punctuation">,</span> scale_factor<span class="token operator">=</span>r<span class="token punctuation">,</span> keep_ratio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> r <span class="token keyword">in</span> img_ratios            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">'horizontal'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RandomFlip'</span><span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">1.</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">'horizontal'</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'LoadAnnotations'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'PackSegInputs'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>train_dataloader <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>    batch_size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token comment"># 这个可以自己测试</span>    num_workers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># </span>    persistent_workers<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    sampler<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'InfiniteSampler'</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'RepeatDataset'</span><span class="token punctuation">,</span>        times<span class="token operator">=</span><span class="token number">40000</span><span class="token punctuation">,</span>        dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>            <span class="token builtin">type</span><span class="token operator">=</span>dataset_type<span class="token punctuation">,</span>            data_root<span class="token operator">=</span>data_root<span class="token punctuation">,</span>            data_prefix<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>                img_path<span class="token operator">=</span><span class="token string">'img_split/train'</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>                seg_map_path<span class="token operator">=</span><span class="token string">'label_split/train'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>            pipeline<span class="token operator">=</span>train_pipeline<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>val_dataloader <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>    batch_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    num_workers<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    persistent_workers<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    sampler<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'DefaultSampler'</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dataset<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>        <span class="token builtin">type</span><span class="token operator">=</span>dataset_type<span class="token punctuation">,</span>        data_root<span class="token operator">=</span>data_root<span class="token punctuation">,</span>        data_prefix<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>            img_path<span class="token operator">=</span><span class="token string">'img_split/val'</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>            seg_map_path<span class="token operator">=</span><span class="token string">'label_split/val'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 改路径</span>        pipeline<span class="token operator">=</span>test_pipeline<span class="token punctuation">)</span><span class="token punctuation">)</span>test_dataloader <span class="token operator">=</span> val_dataloaderval_evaluator <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'IoUMetric'</span><span class="token punctuation">,</span> iou_metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'mDice'</span><span class="token punctuation">,</span> <span class="token string">'mIoU'</span><span class="token punctuation">,</span> <span class="token string">'mFscore'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 改一下评价指标</span>test_evaluator <span class="token operator">=</span> val_evaluator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="模型选取以及参数调整"><a href="#模型选取以及参数调整" class="headerlink" title="模型选取以及参数调整"></a>模型选取以及参数调整</h3><p>这里简单写一个用Unet的（其他的其实类似）<br>比如找个这个<code>./configs/unet/unet-s5-d16_deeplabv3_4xb4-40k_hrf-256x256.py</code><br>然后修改成这个</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">_base_ <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'../_base_/models/deeplabv3_unet_s5-d16.py'</span><span class="token punctuation">,</span> <span class="token string">'../_base_/datasets/my_dataset.py'</span><span class="token punctuation">,</span>    <span class="token string">'../_base_/default_runtime.py'</span><span class="token punctuation">,</span> <span class="token string">'../_base_/schedules/schedule_20k.py'</span><span class="token punctuation">]</span>crop_size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span>data_preprocessor <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>size<span class="token operator">=</span>crop_size<span class="token punctuation">)</span>model <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>    data_preprocessor<span class="token operator">=</span>data_preprocessor<span class="token punctuation">,</span>    test_cfg<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>crop_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>deeplabv3_unet_s5-d16：主要调用的网络架构，这里用的是Unet的架构<br>my_dataset：之前定义的那个数据集<br>default_runtime：基本架构，高级操作才会改一改<br>schedule_20k：训练策略，比如训练多少轮，按照iter训练还是epoch训练。</p><h3 id="训练与测试"><a href="#训练与测试" class="headerlink" title="训练与测试"></a>训练与测试</h3><p>其实已经可以跑了，在模型里面有个<code>num_classes</code>参数，由于Unet本来就是2所以就不用调了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python tools/train.py ./configs/unet/unet-20231113-mine.py --work-dir ./work-dir/test20231113<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接开始愉快的训练，这样都跑不出来就自己对应看看什么问题吧。遇事不决可以先把mmseg删了再重装（可以解决小部分问题，比如在同一环境装了两个mmseg冲突了鼠鼠还真试过）</p><ul><li>测试<br>测试我就不说这么多了，你都看到这了难道还不会找吗（其实是我还没写）</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>多卡训练<br><a href="https://blog.csdn.net/yaoyuyan1204/article/details/129920608">【mmsegmentation】单台机器多卡多任务训练语义分割模型_mmsegmentation 多卡-CSDN博客</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;主要是记录如何使用mmseg这个分割库，使用自己的数据集进行训练，使用自己的config参数以及最后的测试以及推理。&lt;/p&gt;
&lt;p&gt;在这里主</summary>
      
    
    
    
    <category term="学习" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="mmseg" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/mmseg/"/>
    
    
    <category term="学习" scheme="http://lucky_minx.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="人工智能" scheme="http://lucky_minx.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="分割" scheme="http://lucky_minx.com/tags/%E5%88%86%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>vscode修改多行显示</title>
    <link href="http://lucky_minx.com/2023/11/01/%E5%AD%A6%E4%B9%A0/%20%E7%BC%96%E7%A8%8B/vscode%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%8C%E6%98%BE%E7%A4%BA/"/>
    <id>http://lucky_minx.com/2023/11/01/%E5%AD%A6%E4%B9%A0/%20%E7%BC%96%E7%A8%8B/vscode%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%8C%E6%98%BE%E7%A4%BA/</id>
    <published>2023-11-01T12:11:43.000Z</published>
    <updated>2024-03-13T13:57:49.573Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/mj475002864/article/details/115456004#:~:text=%E6%89%93%E5%BC%80%E8%AE%BE%E7%BD%AE%E5%90%8E%EF%BC%8C%E6%95%88%E6%9E%9C%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%EF%BC%8C%E6%89%93%E5%BC%80%E5%A4%9A%E4%B8%AA%E6%96%87%E4%BB%B6%E6%97%B6%EF%BC%8C%E6%89%80%E4%BB%A5%E6%96%87%E4%BB%B6%E9%83%BD%E8%83%BD%E6%98%BE%E7%A4%BA%E5%87%BA%E6%9D%A5%EF%BC%8C%E7%9C%8B%E4%BB%A3%E7%A0%81%E9%9D%9E%E5%B8%B8%E7%9A%84nice%21%21%E8%AE%BE%E7%BD%AE%E6%AD%A5%E9%AA%A4%E6%8C%89%E4%BD%8F%20ctrl%20%2B%20shift%20%2B,p%E8%BE%93%E5%85%A5%20open%20workspace%20settings%2C%E9%80%89%E6%8B%A9%E6%89%93%E5%BC%80%E5%B7%A5%E4%BD%9C%E5%8C%BA%E8%AE%BE%E7%BD%AE%E8%BE%93%E5%85%A5workbench.editor.wr_vscode%20%E6%96%87%E4%BB%B6%E6%A0%8F%E5%A4%9A%E8%A1%8C">vscode 文件标签栏多行显示_vscode 文件栏多行_启希的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/mj475002864/article/details/115456004#:~:text=%E6%89%93%E5%BC%80%E8%AE%BE%E7%BD%AE%E5%90%8E%EF%BC%8C%E6%95</summary>
      
    
    
    
    <category term="学习" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="编程" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="学习" scheme="http://lucky_minx.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="编程" scheme="http://lucky_minx.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>心理讲座</title>
    <link href="http://lucky_minx.com/2023/10/14/%E6%84%9F%E6%83%B3%E4%B8%8E%E6%84%9F%E6%82%9F/%20%E5%BF%83%E7%90%86/%E5%BF%83%E7%90%86%E8%AE%B2%E5%BA%A7/"/>
    <id>http://lucky_minx.com/2023/10/14/%E6%84%9F%E6%83%B3%E4%B8%8E%E6%84%9F%E6%82%9F/%20%E5%BF%83%E7%90%86/%E5%BF%83%E7%90%86%E8%AE%B2%E5%BA%A7/</id>
    <published>2023-10-14T11:13:39.000Z</published>
    <updated>2023-10-14T14:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014191431.png" alt="image.png"></p><p>睡着做梦，典型的潜意识</p><p>心理问题和思想问题：</p><ul><li>思想问题：主要是意识主导的</li><li>心理问题：是心理投射出来的</li></ul><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014193246.png" alt="image.png"></p><p>听力和回忆能力最强</p><p><strong>观念运动</strong><br>例子：走10米高的桌面，担心掉下去</p><p>失眠 尿频尿不畅 哮喘 （惊恐障碍 ）</p><p>抑制观念运动，</p><p>分散注意力，神经系统支配，<br>植物神经调整</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014203817.png" alt="image.png"></p><p>灵感还是要长期的冥思苦想<br>冥想也起到相似的效果</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014205053.png" alt="image.png"></p><p>5*4的催眠大于20分钟，多次催眠效果更好</p><p>催眠后效应：下次催眠的也会继承上次的指令（前提是不要间隔过长）</p><p>潜意识的“非典”理解，大概不要把事情理想化</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014211042.png" alt="image.png"></p><p>没用的也传不下来，没用的可能只是不会用</p><p>查数也要认真查，本质是专心排出杂念，自然就睡了</p><p>手唔丹田，男左脚在上，深呼吸，身心放松，头微微抬高像枕头一样。10分钟就相当于一个午睡。</p><p>10分钟深睡的状态</p><p>主要问题大脑难以心无杂念</p><ul><li><p>想象气物。想象你呼气的空气，从外面到肺里面再呼出来都要沉浸式体验。</p></li><li><p>调整到舒服的状态再醒过来，不要突然醒</p></li><li><p>吸气，然后吐气的时候喊1，一直喊</p></li></ul><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014212605.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/20231014191431.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;睡着做梦，典型</summary>
      
    
    
    
    <category term="感想与感悟" scheme="http://lucky_minx.com/categories/%E6%84%9F%E6%83%B3%E4%B8%8E%E6%84%9F%E6%82%9F/"/>
    
    <category term="心理" scheme="http://lucky_minx.com/categories/%E6%84%9F%E6%83%B3%E4%B8%8E%E6%84%9F%E6%82%9F/%E5%BF%83%E7%90%86/"/>
    
    
    <category term="感想与感悟" scheme="http://lucky_minx.com/tags/%E6%84%9F%E6%83%B3%E4%B8%8E%E6%84%9F%E6%82%9F/"/>
    
    <category term="心理" scheme="http://lucky_minx.com/tags/%E5%BF%83%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>自学人类图</title>
    <link href="http://lucky_minx.com/2023/10/10/%E5%AD%A6%E4%B9%A0/%20%E4%BA%BA%E7%B1%BB%E5%9B%BE/%E8%87%AA%E5%AD%A6%E4%BA%BA%E7%B1%BB%E5%9B%BE/"/>
    <id>http://lucky_minx.com/2023/10/10/%E5%AD%A6%E4%B9%A0/%20%E4%BA%BA%E7%B1%BB%E5%9B%BE/%E8%87%AA%E5%AD%A6%E4%BA%BA%E7%B1%BB%E5%9B%BE/</id>
    <published>2023-10-10T12:47:30.000Z</published>
    <updated>2024-03-13T02:09:19.102Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/453319109">全网最全的人类图解析(上)——九大能量中心与64道闸门 - 知乎 (zhihu.com)</a></p><h2 id="人类图的组成"><a href="#人类图的组成" class="headerlink" title="人类图的组成"></a>人类图的组成</h2><ul><li>神秘学<br>易经、 卡巴拉、脉轮、占星</li></ul><p>易经：红跟黑的13个符号<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202310102100019.png" alt="image.png"></p><p>数字小数点前面是易经的64挂，小数点后是摇线</p><p>中间是脉轮，从七大能量转变为9大能量中心<br><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202310102101463.png" alt="image.png"></p><p>人体中的树状图是卡巴拉生命之树，36条通道也是源自于生命之树</p><ul><li>科学<br>基因生物学：人体的脉络（易经相关，中医）、量子物理学（宇宙，未被学术界认可的科学）</li></ul><h2 id="对自己的人类图的解析"><a href="#对自己的人类图的解析" class="headerlink" title="对自己的人类图的解析"></a>对自己的人类图的解析</h2><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202310102125110.png" alt="image.png"></p><h4 id="64道阀门"><a href="#64道阀门" class="headerlink" title="64道阀门"></a>64道阀门</h4><h4 id="1、头顶Crown能量-闸门61、63、64"><a href="#1、头顶Crown能量-闸门61、63、64" class="headerlink" title="1、头顶Crown能量 (闸门61、63、64)"></a>1、头顶Crown能量 (闸门61、63、64)</h4><p>(有3个匣门)上接宇宙天线，下接脑部松果体，是两大压力中心之一。<br>若盈满 : 智商高但不代表擅理解和表达, 喜欢不停思考也激发旁人动脑.<br><strong>若空白 : 易受盈满者影响, 对于任何思想和想法, 能开放而豁达的接受.</strong><br><strong>[61内在真理匣]–头顶的压力迫使你追求和分辨生命中, 哪些人事物和真理值得去保有; 所领悟的真理能够撼动人心, 并使人感受到神灵的显现.</strong><br>[63怀疑匣]–对应左脑的逻辑思考模式, 你习惯对周遭人事物加以侦测和质疑, 你的观点常来自于他人有效的经验值.<br>[64多样可能性匣]–对应右脑的抽象思考模式, 头顶的压力迫使你不断审视人生, 因无穷的好奇心而不停探索, 试图找出各种可能性.<br>[无匣门]–此开放的中心, 易受他人的想法意念而左右, 询问你的权威</p><h5 id="2、脑Mind能量-闸门4、11、17、24、43、47"><a href="#2、脑Mind能量-闸门4、11、17、24、43、47" class="headerlink" title="2、脑Mind能量 (闸门4、11、17、24、43、47)"></a>2、脑Mind能量 (闸门4、11、17、24、43、47)</h5><p>若盈满 : 像不停运转的CPU, 以固定模式搜索和理解, 不免堵塞和自寻烦恼, 须常冥想淨化.<br><strong>若空白 : 能感受盈满者的思想, 不持主观意识, 常漫不经心又健忘, 不妨接受这些变数, 展开的心智冒险.</strong></p><p>[4解决问题匣]–喜用脑力, 不择手段的解决疑难, 且自傲于解决方案，应分辩真正需要的状态为何, 因为有时人们只是想向你倾诉, 而非真的在寻求解答之道.<br>[11和谐匣]–有丰富的想像力, 且常提出为增进人类未来的福址, 而设想的好点子.<br>[17追随匣]–有绝佳的口才和社交手腕, 虽坚守原则也能消化他人论点，再以公平的态度说服人, 获得人们的认同和追随.<br>[24回顾匣]–反覆回想陈年往事, 试图找出隐藏的关键讯息, 或许得到深度见解, 或许深受习惯束缚.<br>[43突破匣]–脑中似有宣达高超见解的声音, 得以洞察先机, 但须顺应你的权威中心, 以相宜管道表达.<br><strong>[47领悟匣]–你是不断思考解难的高手, 当灵光乍现时, 得到新的领悟</strong>.<br>[无匣门]–此开放的中心, 虽无偏见, 却易陷入他人思维中, 询问你的权威中心, 哪些是值得深入探求的.</p><h4 id="3、喉Throat能量-闸门8、12、16、20、23、31、33、35、45、56、62"><a href="#3、喉Throat能量-闸门8、12、16、20、23、31、33、35、45、56、62" class="headerlink" title="3、喉Throat能量 (闸门8、12、16、20、23、31、33、35、45、56、62)"></a>3、喉Throat能量 (闸门8、12、16、20、23、31、33、35、45、56、62)</h4><p><strong>若盈满 : 擅于各种表达方式, 有自信和节奏, 此能量常引起旁人来对话.</strong><br>若空白 : 沉默或不善表达, 容易被他人的言语制约住, 常会乱无章法的乱插话.没重点.无连贯的对话, 不妨将他人话语, 转变成自己的智慧.</p><p><strong>[8贡献匣]–(表述:我知道我能贡献与否)率直的你, 喜主动出脑出力, 指挥他人加入阵线, 或许能完成目标, 也或许招嫉而无法承担责任.</strong><br><strong>[12暂停匣]–(表述:我知道我能尝试)你想要更公平理想的世界, 却因过份谨慎而怯懦不敢往前, 或是跳跃性的大进化.</strong><br><strong>[16选择力匣]–(表述:我验证过与否)你有预知结果的能力, 去发掘人事物潜藏的可能性, 你的忱吸引众志成城; 经手好东西令你愉快, 被迫处理不吸引你或不感恩你的人, 就令你痛苦.</strong><br><strong>[20当下匣]–(表述:我在当下与否)你常自问何谓真实? 这当下有意义吗?不要悔恨于过往, 只要活在当下, 就能发现自我</strong><br>[23同化匣]–(表述:我知道与否)的言行骤然改变了世界, 引爆全新观点,在发表独特见解时, 须避免因为太直白而惹争议<br>[31影响力匣]–(表述:我能领导与否)有威信的领袖特质+言词具启发性,以不逼人的态度说出想法, 能指挥群体去推动计划.<br>[33隐遁匣]–(表述:我记得与否)脑中有超强记忆库, 也常经历各种挑战,使你能简洁有力的表述, 须常静修以获得经验的智慧.<br>[35前进匣]–(表述:我经历感受过与否)喜善用每个机会以求成长, 导致性格焦躁暴烈, 直到精疲力尽, 才发现自己该引导他人追求有益的经验.<br><strong>[45聚集匣]–(表述:我拥有)精于理财的你, 只需站在原地就能聚集财富,并提供理财教育和顾问, 协助人们如何累积财富.</strong><br>[56流浪者匣]–(表述:我相信与否)喜四处游走, 开拓视野, 享受旅程, 收集各地民情和故事, 善于编说这些纪实.<br><strong>[62表达细节匣]–(表述:我能思考与否)善于摸清来龙去脉和交代细节,关注细微处使你保持公正客观, 人们因你浓厚的权威而信服.</strong><br>[无匣门]–此开放的中心, 令你成为言行的媒介, 反映他人的想法, 可利用旁人的匣门做自我表述, 旁人也可能只筛选听自己想听的部份, 而不认真听你的表达.</p><h4 id="4、自我Self能量-闸门1、2、7、10、13、15、25、46"><a href="#4、自我Self能量-闸门1、2、7、10、13、15、25、46" class="headerlink" title="4、自我Self能量 (闸门1、2、7、10、13、15、25、46)"></a>4、自我Self能量 (闸门1、2、7、10、13、15、25、46)</h4><p>(有8个匣门)连接肝脏, 代表自爱.自我目标定位.方向感和心灵之爱, 会引发你去找寻[我是谁]的课题;</p><p>若盈满 : 自知人生的方向和定位, 喜欢开导他人也常因此分心或受拖累.<br><strong>若空白 : 自我定位不明, 像变色龙般的经常灵巧的适应环境, 若不想随波逐流, 可向盈满者请益.</strong></p><p>[1创意匣]–创意十足又经得起考验, 有独自向前的毅力, 喜摸索新领域以求突破, 若只为利, 会扰乱感知.<br>[2感知力匣]–深知人生方向, 擅适应人生变化却能不迷航, 人们感谢你的指引; 若此中心盈满, 你能坚毅的达成目标, 若此中心空白,可能中途因为感受他人, 而使进程被拖延.<br>[7统合匣]–你是自律严格的领袖, 令人安心追随, 切忌强迫他人, 须激发他人的热情和追随, 才是智慧之举.<br>[10行为匣]–个人风格和自我价值关浓厚, 这爱的匣门让你热爱自己,能承受各种颠簸屈辱, 但不能忍受因自己的表现而遭到不平等待遇, 也不能忍受你的表现令他人对你失望.<br><strong>[13倾听者匣]–擅聆听, 人们不自觉的对你掏出内心最深层的祕密,同理心令你产生怜悯, 很多灵疗师都具有此特质, 藉此助他人找到生命的方向和课题.</strong><br>[15博爱匣]–这谦逊又慈爱的匣门, 令你献身改善人们的生活和谋福址,所交游者, 三教九流皆有, 人们有难时总是想求助于你, 但不保证是否会发生浇熄对人的热情之负面事件.<br><strong>[25纯真匣]–纯真的天性, 与这複杂严苛的世界格格不入, 此爱的匣门, 让你以无条件的爱面对各种混乱, 你会原谅坑你的人, 也会记取教训; 尽量远离粗鲁无礼之辈, 他们只会把你的纯真当成愚蠢.</strong><br>[46鉴赏力匣]–你是洞悉人事物之价值的伯乐, 此爱的匣门是对身体健康之爱, 有好的体态才能加强伯乐的特质.<br>[无匣门]–此开放的中心, 有自我定义和定位的问题, 令大家(包括自己)都不懂你, 须常询问你的权威中心, 才不会经常受人左右或被塑造人格; 或藉由独处, 脱离他人强加给你的各种影响.</p><h4 id="5、心Heart能量-闸门21、26、40、51"><a href="#5、心Heart能量-闸门21、26、40、51" class="headerlink" title="5、心Heart能量 (闸门21、26、40、51)"></a>5、心Heart能量 (闸门21、26、40、51)</h4><p>(有4个匣门)平衡意志力和自我意识, 这是带有竞争意识的能量, 会与金权和得失相关, 是三大动力中心之一</p><p>若盈满 : 会锁定值得全副心力去做的事, 擅说服.操盘和危机处理, 无法忍受不效率, 而必须经常亲力亲为. 心能量盈满者不多, 他们的意志力坚定, 别人要花一小时才能把持住的意志, 他们只要五分钟就够了; 看过刺客列传吗? 这样的英雄人物只和真懂他们的人交心和捨命, 只有能让他们的心海强烈鼓动的人事物, 才是他们不顾一切去投入的目的.</p><p><strong>若空白 : 有精力但没毅力, 须自我意识被触动后, 进而激发竞争意识.</strong></p><p>[21控制匣]–擅掌握局势且行动果决的猎人或控制狂, 若此中心空白, 你会深感失控而想丢给他人操盘; 失控是指~当发生越权控管或无视自己的权威中心指示而去行事时.<br><strong>[26累积匣]–你不会浪费精力做无回报的事, 总是追求声望或财富的累积,像个自负的业务大夸自己; 若用心服务他人, 可感受到精神层面的回报.</strong><br>[40传输匣]–坚强意志力和认真有效的奔走, 你因达成各种利他的要求而变得抢手; 你常自问能否原谅错误? 其实原谅的能力一直在你心中, 它能释放你禁锢的心灵.<br>[51唤起匣]–此匣连结胆囊, 你以大胆无畏的态度激励他人付诸行动; 此匣有助于面对各种夸张和竞争场面, 你有本事创出惊人局面和解决之道, 引出积极的反应, 也暗藏各种激怒人的方法.<br>[无匣门]–此开放的中心, 令你目空一切, 能容忍各种错误, 包括自我价值观; 你为人谦逊又豁达, 但会避免和自大狂接触, 宁可和聪明人做朋友, 他们有助于你评估事物价值和签署合约.</p><h4 id="情绪Emotions能量-闸门6、22、30、36、37、49、55"><a href="#情绪Emotions能量-闸门6、22、30、36、37、49、55" class="headerlink" title="情绪Emotions能量 (闸门6、22、30、36、37、49、55)"></a>情绪Emotions能量 (闸门6、22、30、36、37、49、55)</h4><p>(有7个匣门)与胰.肾.胃.肺.神经系统相连, 是造成情绪起伏的人性核心;<br><strong>若盈满 : 重感觉, 情绪波动甚剧, 无法看清自己的真性情, 勿在情绪高涨时做决定和影响他人.</strong><br>若空白 : 原以为很情绪化, 其实是承接他人情绪而藉空白者反应出来, 学习以超然之智不被感染.<br>[6衝突解决匣]–矛盾的解决法能平衡情绪的ph值, 耽溺某处则造成失衡,你的情绪能支配环境, 结局端视于你有无清楚的见解,以便让高亢的情绪和决心, 从中取得平衡点.<br><strong>[22优雅匣]–深受神之恩典的你, 常以浪漫的角度视事, 总是优雅的待人接物, 能安然渡过任何时刻, 动物也喜亲近你.</strong><br>[30欲望匣]–欲望之火驱使你去嚐鲜, 必须培养控制心火的智慧, 在追寻之前, 不要预设太多结果, 以免对结果失望.<br>[36危机处理匣]–你发觉常身处于灾难边缘, 学习放下对陌生领域的焦虑,试著优雅又客观的面对无可避免的测试.<br>[37家庭观念匣]–强烈的家庭观念, 与家人共聚和用餐能带来莫大喜悦,出卖或欺骗你的人, 会被你屏除在外.<br>[49改革匣]–你渴求活得正确, 某些转变的时机是必然的, 所以你深知变革的时间表; 你常与朋友分道扬镳, 这有助于情绪改革,以及不让人轻易进入你的领域.<br>[55丰盛匣]–此匣令你情绪满档而难以驾驭或压抑, 独处能让你脱离坏情绪; 内心常觉得富有, 也会结交同质者.<br>[无匣门]–此开放的中心, 令你以超然态度观察他人情绪, 你讶异于人们选择的生活方式, 旁人则认为你太冷淡, 但这并非你没感觉,而是宁可放在心中去感受就好, 大多数演员皆然, 先感受剧情并诠释剧情所要表达的情绪.</p><h4 id="7、脾Spleen能量-闸门18、28、32、44、48、50、57"><a href="#7、脾Spleen能量-闸门18、28、32、44、48、50、57" class="headerlink" title="7、脾Spleen能量 (闸门18、28、32、44、48、50、57)"></a>7、脾Spleen能量 (闸门18、28、32、44、48、50、57)</h4><p>(有7个匣门)只有生存本能, 无关智力, 与免疫系统相连, 也是触发[恐惧机制]的感觉中枢</p><p><strong>若盈满 : 具自发性的疗癒和直觉性的警戒之特质, 常意识环境的安全指数而不易生病.</strong></p><p>若空白 : 常感受旁人的恐惧而没来由的担忧, 西药可能危害免疫系统.</p><p>[18改进匣]–你渴望修补心中因亲友或社会造成的旧伤痛, 也常因过往的错误产生自咎而堕落, 此匣要你审视不合宜的方法和旧传统,带来进步的契机; 此匣也有让你面对自我缺失的力量.<br>[28玩家匣]–你想活得精彩, 而把对死亡的隐忧转成喜欢冒险游戏, 或被死亡的恐惧搞得气馁而抗拒体验人生.<br><strong>[32持久匣]–你能敏锐嗅出生活中的不安或威胁, 为保有稳定长久的事物而严格筛选, 失败是最大的恐惧, 若此中心为空白就越恐惧,忍耐会慢慢消除恐惧感.</strong><br>[44模式匣]–擅用过去的深层记忆去感受, 能侦测出未来的新趋势和潜力新人; 若此中心为空白, 会常缅怀过往, 害怕错误被重蹈.<br><strong>[48井深匣]–你很有深度, 常为谋个人福址和保持事物鲜度, 而探索内心的深度, 带来高度觉察力和超然观点, 而成为足智多谋又善于应变的人; 你怕懂的太浅薄, 被目前仅有的深度所束缚而降低察觉力.</strong><br>[50价值观匣]–对道德良知有深度认同, 因看重家族传承和维繫社会价值观, 而深受被旁人要求成为道德楷模的压力, 若此中心为空白, 这种道德责任感就更加严重.<br><strong>[57稳重匣]–你力敏锐的直觉总是不断审视周遭, 以保护福址; 人们以为你漫不经心的应对, 其实你早已洞悉一切, 试图柔性劝说他人, 噪音和抱怨令你刺耳, 别被生活中的困难降低了直觉力.</strong><br>[无匣门]–此开放的中心, 令你鲜少感到害怕, 对周遭环境的变化看得更清晰, 对超自然的心灵层面更敏锐, 别被旁人的恐惧感染, 而莫名随之害怕, 蒙蔽你对环境的敏感度.</p><h4 id="8、荐骨Sacral能量-闸门3、5、9、14、27、29、34、42、59"><a href="#8、荐骨Sacral能量-闸门3、5、9、14、27、29、34、42、59" class="headerlink" title="8、荐骨Sacral能量 (闸门3、5、9、14、27、29、34、42、59)"></a>8、荐骨Sacral能量 (闸门3、5、9、14、27、29、34、42、59)</h4><p>(有9个匣门)与性器官相连的性中心, 即人体发电机, 是直觉反应之源头;</p><p>若盈满 : 精力充沛, 常为他人做牛做马, 易感受强烈的性爱驱使.<br>若空白 : 能量无法持久, 须与他人共事, 不适合业务工作, 也不热衷性事,若遇此中心盈满者, 性意识才会被激发.</p><p>[3开端匣]–无可避免的除旧佈新, 从播种开始接受新开端的磨练, 耐心等待发芽茁壮, 以迎接后续的起飞性的发展.<br><strong>[5等待匣]–放任你的权威中心, 跟宇宙时钟协调, 让作息跟随大自然律动, 轻鬆以待的获知行动的正确时间,</strong><br><strong>[9确认细节匣]–有本事抓住被他人无视的细节, 从头釐清紊乱的文件,让细节逐步的就定位, 专注又有效率.</strong><br>[14富足匣]–最幸运匣门, 把才华投注在兴趣上, 或对众人有益的领域,即可创造财富; 擅各种理财工具, 拥有规模财富和成就,也不怕担责任, 你认为财富取决于看事情的角度.<br>[27滋养匣]–你愿意关怀扶助人类和社会求生的基本需求, 但要先关心自己健康, 才有馀力照料他人.<br><strong>[29承诺匣]–喜接受大大小小的挑战, 随口答应他人, 而搞得自己疲累又灰心, 须先搞清状况再决定是否投入.</strong><br>[34权力匣]–荐骨中心唯一与性无关的匣, 且无须与人有瓜葛, 便能够独力追求权利和成就, 赶快习惯这擅于支配权力的天赋,多提高判别力的敏锐度, 别把力气虚耗在无回报的领域.<br>[42增加匣]–想实践心中道德标准, 务求种因得果, 只谋个人福利会使这个特质受阻, 利他的行为会就受幸运之神眷顾.<br>[59亲密匣]–你能强力发送亲密的雷达讯号, 与人亲密互动, 你的生物责任就是生育后代.<br>[无匣门]–此开放的中心, 令你容易受旁人支配须付诸心力的计划, 请慎选团体, 多让他人代劳, 因你能量不持久; 你对性爱一无所知, 或许会被吓得心生气馁, 或许会被引领入性爱殿堂.</p><h4 id="9、根Root能量-闸门19、38、39、41、52、53、54、58、60"><a href="#9、根Root能量-闸门19、38、39、41、52、53、54、58、60" class="headerlink" title="9、根Root能量 (闸门19、38、39、41、52、53、54、58、60)"></a>9、根Root能量 (闸门19、38、39、41、52、53、54、58、60)</h4><p>(有9个匣门)与肾上腺相连的活动发射台, 是两大压力中心之一<br><strong>若盈满 : 无法静坐下来, 常发动事件, 能承受消化方面的压力, 别凭著一股激动去行事.</strong></p><p>若空白 : 总以自己的步调轻鬆慢活, 而常被旁人鞭策, 必须以超然之智评判是否要承接扑来的压力.</p><p>[19连繫匣]–努力连繫关係, 渴望被需要, 为了让情绪.性爱.受赞赏被满足, 会不断放电调情来找到伴侣; 分离令你不安,你容易自我牺牲以谋求团结一致, 此匣门让你能更清楚对方, 以提升自我的要件.<br>[38反对匣]–你好辩好斗, 有钢铁意志和战斗力挑战公权力, 为谋求众人福址; 容易固执己见, 为避免无意义的损耗战力,最好多听取同伴意见, 以免最后只得到反抗, 而非感谢.<br>[39挑衅匣]–在社交中, 喜调情和逗弄, 以吸引注意和认可, 不会浪费精力去逗弄不关注你的人, 你有为他人做心灵复甦术的能力, 但须先分辨对方是否想要这份活力.<br><strong>[41想像力匣]–此匣如心灵之眼, 在各角落寻求起点的契机, 想像力让你感到自由, 也沉浸在不思议的虚幻而无法自拔,让旁人也信以为真.</strong><br>[52安定匣]–人们钦佩你的淡定和如高山般的稳定感, 你拥有如高山般的视野, 提出无与伦比的观点.<br><strong>[53新开始匣]–万事皆有起承转合, 此匣令你不断寻求新开端, 却难以持续到终局, 擅于起头却拙于收尾.</strong><br><strong>[54企图心匣]–你有雄心抱负和欲望, 会去挑战命运, 却常轻率定出目标, 同时大力拓展关係迈向难以达成的目标.</strong><br>[58欢乐活力匣]–有如赤子般的活力, 不因年龄增长而消弭, 还能传达正面的鼓舞给旁人; 保持欢乐和正面的态度, 慎选要投注心力的目标而前进.<br>[60限制匣]–为了顾及现实因素, 总是奉公守法又安份, 此匣迫使你接受无法达成的各种限制, 要学习面对那些无法完成或得不到的事物, 心平气和接受一切, 你就开始进化了出无与伦比的观点.<br>[无匣门]–此开放的中心, 令你难以处理压力, 尤其当别人强加有效性的压力时, 须学习超然态度, 才不会被外力击倒.</p><p>后半部分参考来自<br><a href="https://blog.csdn.net/EliminatedAcmer/article/details/100022910">全网最全的人类图解析(下)——类型、人生角色、定义等_如何看懂自己的人类图-CSDN博客</a></p><h3 id="通道连通的含义"><a href="#通道连通的含义" class="headerlink" title="通道连通的含义"></a>通道连通的含义</h3><p>十五、16-48：大师的通道，Wavelength ,Talent,Creative Flair<br>很有天赋，洗碗都很有天赋，一次只能专注做一件事情，你要非常清晰的知道你生命中有哪些事情是值得你去做的。你没有那么多资源和动力去表达你的创意，所以很有可能变得一个穷艺术家。要非常的专注。你的才华可以表现在很多不同的事物，但是你要知道你的关注在不同的事情上面。</p><p>如果有两条这样的通道，是创意无极限的人，类型是显生，不断有创意也有能量。作为情绪型生产者，在做决定之前要等待荐骨的回应也要等到情绪的清明。</p><p>二十、20-57：冲动的通道，Involuntary impulses,penetrating awareness</p><p>非自愿不主动的脉络，57#你一直会有不一样的洞见直觉，关于未来的，20#是表达，我就是有这样的洞见就是要表达出来。一起聊天，突然会有不一样的跟现在话题无关的想法。非常个人个体的表达，不属于社会回路群，跟别人没关系，是听觉是可以被赋予力量的。但是绝大部分你说的跟别人在聊的没关系，但是你就是突然的想跟别人说这个，你觉得很好玩，虽然你自己也觉得讲这个好像不合适。</p><p>这条通道连接直觉和喉咙中心，48-16才华是让人很赏识的，但是也跟20-57有相似之处，比如你只是说了一些什么就让别人感觉良好，你跟别人在一起的时候，你能帮助直觉中心洗衣机的能量显化，你的存在甚至不需要说什么就会让人觉得很愉快，你能显化轻盈的能量，你不但可以表达直觉，当你跟别人在一起的时候，你能帮助别人跟自己的直觉连接。</p><p>突然有一种灵感就要说出来 </p><p>三十、32-54：转化的通道，Transformation,driving towards achievements</p><p>转化，朝着目标迈进。54#是少女出嫁，归妹。54#是野心的闸门，我们每个人在生命的某个时刻都会感受到内在的渴望，我要去旅行写书环游世界等。对我们每个人都是提醒，我们每个人都有一份特殊的礼物带给这个世界，只有你能实现他，你还有那份驱动吗？你还能记得那份初心吗？你有什么是你一直想做去，但没有去尝试的渴望吗？如果你有这条通道，回到你的初心，找出你真正的渴望。</p><p>2018年接下来的时间冥王星在54#，现在就是你的机会，比如你一直想要去南极想要学画画想着你小时候的梦想，总会是有一些事情你一直想做的，你去清楚的发现和再次找回你特别想做的事情是什么，如果你真的想做，冥王星会给你提供支持。冥王星有点戏剧化，意味着你做这个事情你会放弃一些其他事情，我现在要去做一些不同的事情。你要去认出来自己核心的欲望和野心，你应该要做去一些你要做的事情。武则天的例子，可以很好的诠释有这条通道的特质。54#是纯粹的野心出发，最后到了45#国王女王收获的闸门。如果你想要在物质世界获得成就，就是去到45#就是物质的收获。如果你想要获得精神的满足，那就是去到55#精神的丰盛。</p><p>十三、12-22：率真的通道</p><p>优雅的社交通道。个体的回路群，也是有情绪的声音，你所表达的东西也是与众不同的。情绪波的形式是很戏剧性的，你的音调能够表示出来你现在属于哪个情绪，个人的情绪的显化。往往不会什么都说，作为个体通道，他自己很清楚的知道自己在做的事情不是大众认可的，会选择少说，因为会觉得旁人会制造阻碍。你要清楚的知道，什么人应该知道什么事情。他们生活的方式很可能跟别人不一样。也叫做开放的通道，有发明性和与众不同的创造，与生命进行非常有发明和创造的互动。</p><p>总会有这样的一个画面，婚礼结束以后有一个派对，大家也都去这个派对，进去派对之前你需要跟家人见面，排长队进去，你跟所有的亲属打招呼，如果你有12-22，你看了这么长一条队伍，他可以找到另外一条队伍进入派对，你会知道你在派对里面会遇到你感兴趣的几个人。你们来制定和发明自己的规则，当别人看到都是一堵墙，他们总能看到另外的门和另外的办法。也是一条完成不可能任务的通道（57-10在什么环境都可以活下来&#x2F;34-10是活出自己的信念）。</p><p>如果你觉得某些事情你生命中非做不可的事情，不要让别人来阻止你。另辟蹊径的人。优雅的、浪漫，浪漫本身就是去追求那些不可思议的事情。（用不同的方式做事情，显化的通道，能有情绪的清明你是否一定要去做这件事情）。如果在潜意识，别人更容易发现你的特质。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/453319109&quot;&gt;全网最全的人类图解析(上)——九大能量中心与64道闸门 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;人类图的组成&quot;&gt;&lt;a href=&quot;#人类图的组成&quot; c</summary>
      
    
    
    
    <category term="学习" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="人类图" scheme="http://lucky_minx.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E7%B1%BB%E5%9B%BE/"/>
    
    
    <category term="学习" scheme="http://lucky_minx.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="人类图" scheme="http://lucky_minx.com/tags/%E4%BA%BA%E7%B1%BB%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>关于之前用师兄的账号连服务器现在用自己的vscode连不上</title>
    <link href="http://lucky_minx.com/2023/09/12/%E5%AE%9E%E9%AA%8C/%20%E6%95%88%E7%8E%87/%E5%85%B3%E4%BA%8E%E4%B9%8B%E5%89%8D%E7%94%A8%E5%B8%88%E5%85%84%E7%9A%84%E8%B4%A6%E5%8F%B7%E8%BF%9E%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%B0%E5%9C%A8%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84vscode%E8%BF%9E%E4%B8%8D%E4%B8%8A/"/>
    <id>http://lucky_minx.com/2023/09/12/%E5%AE%9E%E9%AA%8C/%20%E6%95%88%E7%8E%87/%E5%85%B3%E4%BA%8E%E4%B9%8B%E5%89%8D%E7%94%A8%E5%B8%88%E5%85%84%E7%9A%84%E8%B4%A6%E5%8F%B7%E8%BF%9E%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%B0%E5%9C%A8%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84vscode%E8%BF%9E%E4%B8%8D%E4%B8%8A/</id>
    <published>2023-09-12T11:29:39.000Z</published>
    <updated>2023-09-17T14:29:10.592Z</updated>
    
    <content type="html"><![CDATA[<p>还得是gpt</p><ol><li><p>打开一个文本编辑器，以管理员身份运行。</p></li><li><p>打开C:\Users\77280&#x2F;.ssh&#x2F;known_hosts文件。</p></li><li><p>找到与IP地址10.103.22.4相关的行（在错误消息中指定的行数，如：第5行），并删除该行。</p></li><li><p>保存文件。</p></li><li><p>然后再次尝试运行SSH连接命令：</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;还得是gpt&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开一个文本编辑器，以管理员身份运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开C:&#92;Users&#92;77280&amp;#x2F;.ssh&amp;#x2F;known_hosts文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;找到与IP地址10.103</summary>
      
    
    
    
    <category term="实验" scheme="http://lucky_minx.com/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    <category term=" 效率" scheme="http://lucky_minx.com/categories/%E5%AE%9E%E9%AA%8C/%E6%95%88%E7%8E%87/"/>
    
    
    <category term="实验" scheme="http://lucky_minx.com/tags/%E5%AE%9E%E9%AA%8C/"/>
    
    <category term="效率" scheme="http://lucky_minx.com/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>Shell command用法</title>
    <link href="http://lucky_minx.com/2023/08/31/tech/obsidian/Shell%20command%E7%94%A8%E6%B3%95/"/>
    <id>http://lucky_minx.com/2023/08/31/tech/obsidian/Shell%20command%E7%94%A8%E6%B3%95/</id>
    <published>2023-08-31T02:00:36.000Z</published>
    <updated>2023-09-18T15:49:12.455Z</updated>
    
    <content type="html"><![CDATA[<p>之前弄好的shell command配置因为和mac同步所以弄没了，重新配了一个</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202308311003490.png" alt="Shell command"><br>以后只需要在ctrl+P输入git blog即可<br>然后这个命令主要是用start来执行bat脚本（这个start都能找半天真是无语）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前弄好的shell command配置因为和mac同步所以弄没了，重新配了一个&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202</summary>
      
    
    
    
    <category term="tech" scheme="http://lucky_minx.com/categories/tech/"/>
    
    <category term="obsidian - tech - obsidian" scheme="http://lucky_minx.com/categories/tech/obsidian-tech-obsidian/"/>
    
    
  </entry>
  
  <entry>
    <title>obsidian联动hexo的问题</title>
    <link href="http://lucky_minx.com/2023/08/26/tech/%20obsidian/obsidian%E8%81%94%E5%8A%A8hexo%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://lucky_minx.com/2023/08/26/tech/%20obsidian/obsidian%E8%81%94%E5%8A%A8hexo%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-08-26T00:55:07.000Z</published>
    <updated>2024-03-13T13:58:20.641Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhaohongxuan.github.io/2022/05/03/How%20to%20write%20blog%20in%20obsidian%20and%20publish%20to%20hexo%20blog/#:~:text=git%20commit%20-m%20%22Commit%20from%20Obsidian%22%20git%20push,Shell%20Command%20%E6%8F%92%E4%BB%B6%EF%BC%8Cinstall%20%E4%B9%8B%E5%90%8E%E8%AE%B0%E5%BE%97enable%EF%BC%8C%E5%9C%A8Shell%20Command%E7%9A%84%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2%E5%A2%9E%E5%8A%A0%20pub%20%E6%9D%A5%E8%BF%9B%E8%A1%8Cblog%20publish%EF%BC%8C%E8%BF%99%E9%87%8C%E8%A6%81%E8%AE%B0%E5%BE%97%E7%BB%91%E5%AE%9A%E5%88%B0%E4%BD%A0%E4%BD%BF%E7%94%A8%E7%9A%84shell%E4%B8%8A%EF%BC%8C%E6%AF%94%E5%A6%82zsh%E3%80%82">Obsidian和Hexo结合的解决方案 | Hank’s Blog (zhaohongxuan.github.io)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhaohongxuan.github.io/2022/05/03/How%20to%20write%20blog%20in%20obsidian%20and%20publish%20to%20hexo%20blog/#:~:text=gi</summary>
      
    
    
    
    <category term="tech" scheme="http://lucky_minx.com/categories/tech/"/>
    
    <category term="obsidian" scheme="http://lucky_minx.com/categories/tech/obsidian/"/>
    
    
  </entry>
  
  <entry>
    <title>Macau Travel Guide</title>
    <link href="http://lucky_minx.com/2023/08/12/%E7%94%9F%E6%B4%BB/%E6%97%85%E6%B8%B8/%E6%BE%B3%E9%97%A8%E6%94%BB%E7%95%A5/"/>
    <id>http://lucky_minx.com/2023/08/12/%E7%94%9F%E6%B4%BB/%E6%97%85%E6%B8%B8/%E6%BE%B3%E9%97%A8%E6%94%BB%E7%95%A5/</id>
    <published>2023-08-12T02:14:45.000Z</published>
    <updated>2023-08-25T13:54:41.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要问题：-流量：支付宝搜索“境外流量”，买1G，但是接不了电话-公交：记得带好零钱，6块钱一位。早上的发财车太难等了-钱：入境前换好，银行只能换大面额。陆路过关可以换，但是要小心点（到时候可以先换多点零钱），到了澳门随处都可以换"><a href="#主要问题：-流量：支付宝搜索“境外流量”，买1G，但是接不了电话-公交：记得带好零钱，6块钱一位。早上的发财车太难等了-钱：入境前换好，银行只能换大面额。陆路过关可以换，但是要小心点（到时候可以先换多点零钱），到了澳门随处都可以换" class="headerlink" title="主要问题：- 流量：支付宝搜索“境外流量”，买1G，但是接不了电话- 公交：记得带好零钱，6块钱一位。早上的发财车太难等了- 钱：入境前换好，银行只能换大面额。陆路过关可以换，但是要小心点（到时候可以先换多点零钱），到了澳门随处都可以换"></a>主要问题：<br>- 流量：支付宝搜索“境外流量”，买1G，但是接不了电话<br>- 公交：记得带好零钱，6块钱一位。早上的发财车太难等了<br>- 钱：入境前换好，银行只能换大面额。陆路过关可以换，但是要小心点（到时候可以先换多点零钱），到了澳门随处都可以换</h2><p>- </p><h2 id="景点"><a href="#景点" class="headerlink" title="景点"></a>景点</h2><p>‘<br>来源：<a href="https://zhuanlan.zhihu.com/p/620830160">保姆级澳门一日游攻略！内含10个景点、30家美食攻略~ - 知乎 (zhihu.com)</a><br><strong>大三巴牌坊</strong><br>最具代表性的牌坊</p><p><strong>议事厅前地</strong><br>澳门四大广场之一</p><p><strong>玫瑰圣母堂</strong><br>老教堂</p><p><strong>新葡京酒店</strong><br>绝佳拍照点<br><strong>澳门旅游塔</strong><br>全球独立式观光塔第十位的观光塔<br><strong>渔人码头</strong></p><p><strong>官也街</strong><br>著名美食街</p><p>大三巴-新马路&#x2F;议事厅前地-玫瑰圣母堂-渔人码头-新葡京酒店-澳门塔-官也街-龙环葡韵-威尼斯人&#x2F;巴黎人&#x2F;伦敦人酒店-黑沙海滩。</p><h1 id="plan2"><a href="#plan2" class="headerlink" title="plan2"></a>plan2</h1><p><a href="https://www.xiaohongshu.com/explore?app_platform=ios&app_version=8.1&share_from_user_hidden=true&type=normal&xhsshare=WeixinSession&appuid=5d54d372000000001201c5a4&apptime=1691837964&wechatWid=0de1e29a11a2603c4ef314ac333b61c3&target_note_id=64b7a74a000000001c00ebce">小红书 - 你的生活指南 (xiaohongshu.com)</a><br>交通：<br>1️⃣关口到新葡京  （巴士）<br>2️⃣新葡京到大三巴，步行<br>3️⃣大三巴到官也街，坐巴士6葡币&#x2F;人  （巴士）🚌交通：巴士22&#x2F;28A&#x2F;33，沿途风景不错<br>4️⃣官也街到威尼斯人，步行<br>5️⃣威尼斯人到巴黎人&#x2F;伦敦人，步行<br>6️⃣伦敦人到关口 （巴士）</p><p>周末从门口到过关完成大概要40[[MindMap-发]] </p><h3 id="新葡京"><a href="#新葡京" class="headerlink" title="新葡京"></a>新葡京</h3><p>打卡机位：成功人士照，下车往葡京 娱乐场方向过马路直走100米（旧葡京酒店的门口）</p><h3 id="大三巴"><a href="#大三巴" class="headerlink" title="大三巴"></a>大三巴</h3><p>📷打卡机位：大三巴正面、右侧斜坡、大炮台大树、优衣库二楼窗口、优衣库一楼走廊，附近有玫瑰圣母堂、斜巷、恋爱巷<br>✅猪肉干牛肉干特产一条街就在这里，🆓试吃</p><h3 id="官也街"><a href="#官也街" class="headerlink" title="官也街"></a>官也街</h3><p>🚌交通：巴士22&#x2F;28A&#x2F;33，沿途风景不错<br>美食街小吃街，走走逛逛看到很多装修创意小店</p><p><img src="https://minx-obsidian-1308153283.cos.ap-guangzhou.myqcloud.com/obsidian/pic/202308122309252.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;主要问题：-流量：支付宝搜索“境外流量”，买1G，但是接不了电话-公交：记得带好零钱，6块钱一位。早上的发财车太难等了-钱：入境前换好，银行只能换大面额。陆路过关可以换，但是要小心点（到时候可以先换多点零钱），到了澳门随处都可以换&quot;&gt;&lt;a href=&quot;#主要问题：</summary>
      
    
    
    
    <category term="Life" scheme="http://lucky_minx.com/categories/Life/"/>
    
    <category term="travel" scheme="http://lucky_minx.com/categories/Life/travel/"/>
    
    
    <category term="Life" scheme="http://lucky_minx.com/tags/Life/"/>
    
    <category term="travel" scheme="http://lucky_minx.com/tags/travel/"/>
    
    <category term="Guide" scheme="http://lucky_minx.com/tags/Guide/"/>
    
  </entry>
  
  <entry>
    <title>mac安装labelme</title>
    <link href="http://lucky_minx.com/2023/08/02/tech/%20mac/mac%E5%AE%89%E8%A3%85labelme/"/>
    <id>http://lucky_minx.com/2023/08/02/tech/%20mac/mac%E5%AE%89%E8%A3%85labelme/</id>
    <published>2023-08-02T13:28:47.000Z</published>
    <updated>2024-03-13T13:58:14.403Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda create <span class="token parameter variable">--name</span><span class="token operator">=</span>labelme <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.6</span><span class="token builtin class-name">source</span> activate labelmeconda <span class="token function">install</span> <span class="token parameter variable">-c</span> conda-forge pyside2conda <span class="token function">install</span> pyqtpip <span class="token function">install</span> pyqt5  pip <span class="token function">install</span> labelme<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实只要安装好前基本其他直接按最后一个也是可以的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create &lt;span class=&quot;token parameter variable&quot;</summary>
      
    
    
    
    <category term="tech" scheme="http://lucky_minx.com/categories/tech/"/>
    
    <category term="mac" scheme="http://lucky_minx.com/categories/tech/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lucky_minx.com/2023/05/21/hello-world/"/>
    <id>http://lucky_minx.com/2023/05/21/hello-world/</id>
    <published>2023-05-21T10:00:21.304Z</published>
    <updated>2023-05-21T10:00:21.844Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
